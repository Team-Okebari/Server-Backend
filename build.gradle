plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
}

group = 'com.okebari'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // For Logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // OpenAPI / Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.0'

    // Servlet API for HttpServletRequest/Response
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:postgresql:1.19.7'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
}

checkstyle {
    toolVersion = '12.1.0'
    configFile = rootProject.file('src/main/resources/codeConvention/Naver-CheckStyle-Rules.xml')
    ignoreFailures = false
    showViolations = true
}

tasks.withType(Checkstyle).configureEach {
    reports {
        html.required = true
        xml.required = false
        html.outputLocation = layout.buildDirectory.file("reports/checkstyle/${name}.html").get().asFile
    }
}

tasks.named('check') {
    dependsOn checkstyleMain
}

tasks.named('checkstyleTest') {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
}
